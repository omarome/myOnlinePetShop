{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\nexport default useLocation = function useLocation() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, granted, _await$Location$getLa, _await$Location$getLa2, latitude, longitude;\n\n    return _regeneratorRuntime.async(function getLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestBackgroundPermissionsAsync);\n\n          case 3:\n            _await$Location$reque = _context.sent;\n            granted = _await$Location$reque.granted;\n\n            if (granted) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Location.getLastKnownPositionAsync());\n\n          case 9:\n            _await$Location$getLa = _context.sent;\n            _await$Location$getLa2 = _await$Location$getLa.coords;\n            latitude = _await$Location$getLa2.latitude;\n            longitude = _await$Location$getLa2.longitude;\n            setLocation({\n              latitude: latitude,\n              longitude: longitude\n            });\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getLocation();\n  }, []);\n  return location;\n};","map":{"version":3,"sources":["/Volumes/Hard-Drive/practice React native /donewithIt/app/hooks/useLocation.js"],"names":["useEffect","useState","Location","useLocation","location","setLocation","getLocation","requestBackgroundPermissionsAsync","granted","getLastKnownPositionAsync","coords","latitude","longitude","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAeC,WAAW,GAAG,uBAAM;AACjC,kBAAgCF,QAAQ,EAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUJ,QAAQ,CAACK,iCAFnB;;AAAA;AAAA;AAERC,YAAAA,OAFQ,yBAERA,OAFQ;;AAAA,gBAGXA,OAHW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAMNN,QAAQ,CAACO,yBAAT,EANM;;AAAA;AAAA;AAAA,2DAKdC,MALc;AAKJC,YAAAA,QALI,0BAKJA,QALI;AAKMC,YAAAA,SALN,0BAKMA,SALN;AAOhBP,YAAAA,WAAW,CAAC;AAAEM,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,SAAS,EAATA;AAAZ,aAAD,CAAX;AAPgB;AAAA;;AAAA;AAAA;AAAA;AAShBC,YAAAA,OAAO,CAACC,GAAR;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAaAd,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOF,QAAP;AACD,CArBD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\n\nexport default useLocation = () => {\n  const [location, setLocation] = useState();\n\n  const getLocation = async () => {\n    try {\n      const { granted } = await Location.requestBackgroundPermissionsAsync;\n      if (!granted) return;\n      const {\n        coords: { latitude, longitude },\n      } = await Location.getLastKnownPositionAsync();\n      setLocation({ latitude, longitude });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  return location;\n};\n"]},"metadata":{},"sourceType":"module"}